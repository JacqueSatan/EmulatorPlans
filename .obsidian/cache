{"files":{"Emulator/Emulator.md":{"mtime":1593091999794.2827,"size":290,"hash":"593f58f83f19b9a8987cde7bb3afd7bf55e97d8ad0a65debecb153d02a97a28c"},"Emulator/Core/Bus.md":{"mtime":1592991486592.1145,"size":0,"hash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"},"Emulator/Core/Core.md":{"mtime":1592991509986.666,"size":23,"hash":"eabd7b4c1358027dc1c1895a1d41f57b0f80ef3edec5f20b6829ab5bcedf0864"},"Emulator/Central Processing Unit/Stack.md":{"mtime":1593083589944.6094,"size":326,"hash":"20d646027e1c342c95695f8b0a56f94e8571a7e4089a2a8ee4d90c8269713290"},"Emulator/Central Processing Unit/Arithmetic Logic Unit.md":{"mtime":1593083231946.8562,"size":950,"hash":"06c5e333fd9c28deeee859394b85d448e46f6f6e978417dde59fd3f48d8c1715"},"Emulator/Central Processing Unit/Registers.md":{"mtime":1593082459094.9287,"size":280,"hash":"27e03c44b010e6dc83b931440743dfbc3584b9c40a937ce081942584581cf6ad"},"Emulator/Central Processing Unit/Central Processing Unit.md":{"mtime":1593091029362.9412,"size":108,"hash":"f319087b42ea856561ffe8314a60fbf7628cd6d8a48adabaa1aae8a0bd5d721f"},"Emulator/Random Access Memory/Random Access Memory.md":{"mtime":1593091075444.1028,"size":442,"hash":"65afdb5c28dd10d0b18fff5dfcff321c7074c0940386396f1f75a27222c9abf8"},"Emulator/Program Memory/Program Memory.md":{"mtime":1593076320310.956,"size":0,"hash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"},"Emulator/Central Processing Unit/Interpreter.md":{"mtime":1593090977536.2273,"size":2428,"hash":"f6a63a5bf1f23a9bf50d322ff3fc300b0e5768dc847ca9e8a3d4fdda4f1fd69a"},"readme.md":{"mtime":1593092110929.324,"size":152,"hash":"b30920e7e2d6affad0c12e31cb667b8ca13b075057fae6a8900c0d91479e20b8"}},"metadata":{"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855":{"links":[],"embeds":[],"tags":[],"headings":[]},"eabd7b4c1358027dc1c1895a1d41f57b0f80ef3edec5f20b6829ab5bcedf0864":{"links":[{"line":0,"link":"Bus","original":"[[Bus]]","displayText":"","beforeContext":"Components :- ","afterContext":""}],"embeds":[],"tags":[],"headings":[]},"27e03c44b010e6dc83b931440743dfbc3584b9c40a937ce081942584581cf6ad":{"links":[{"line":1,"link":"Central Processing Unit","original":"[[Central Processing Unit]]","displayText":"","beforeContext":"Registers are where the ","afterContext":" stores temporary data. There are 16 of them, and they are 32 bits wide."},{"line":3,"link":"Interpreter","original":"[[Interpreter]]","displayText":"","beforeContext":"Registers values can be accessed and modified by the ","afterContext":" and the Arithmetic Logic Unit."},{"line":3,"link":"Arithmetic Logic Unit","original":"[[Arithmetic Logic Unit]]","displayText":"","beforeContext":"Registers values can be accessed and modified by the Interpreter and the ","afterContext":"."}],"embeds":[],"tags":[],"headings":[{"line":0,"heading":"Registers","level":1}]},"06c5e333fd9c28deeee859394b85d448e46f6f6e978417dde59fd3f48d8c1715":{"links":[{"line":1,"link":"Central Processing Unit","original":"[[Central Processing Unit]]","displayText":"","beforeContext":"The Arithmetic Logic Unit is where the ","afterContext":" solves arithmetic operations.It receives instructions from the Interpreter."},{"line":1,"link":"Interpreter","original":"[[Interpreter]]","displayText":"","beforeContext":"The Arithmetic Logic Unit is where the Central Processing Unit solves arithmetic operations.It receives instructions from the ","afterContext":"."},{"line":17,"link":"Registers","original":"[[Registers\\|register]]","displayText":"register","beforeContext":"First ","afterContext":" ID."},{"line":17,"link":"Registers","original":"[[Registers\\|register]]","displayText":"register","beforeContext":"Second ","afterContext":" ID."}],"embeds":[],"tags":[],"headings":[{"line":0,"heading":"Arithmetic Logic Unit","level":1},{"line":4,"heading":"Numbers","level":2},{"line":12,"heading":"Instructions","level":2},{"line":21,"heading":"Operations types","level":2}]},"20d646027e1c342c95695f8b0a56f94e8571a7e4089a2a8ee4d90c8269713290":{"links":[{"line":1,"link":"Interpreter","original":"[[Interpreter]]","displayText":"","beforeContext":"The stack can be accessed by the ","afterContext":" to store temporary values, like functions arguments."},{"line":5,"link":"Interpreter#Instructions","original":"[[Interpreter#Instructions]]","displayText":"","beforeContext":"Please refer to ","afterContext":" 0x05 and 0x06 for more informations."}],"embeds":[],"tags":[],"headings":[{"line":0,"heading":"Stack","level":1}]},"f6a63a5bf1f23a9bf50d322ff3fc300b0e5768dc847ca9e8a3d4fdda4f1fd69a":{"links":[{"line":1,"link":"Interpreter#Instructions","original":"[[Interpreter#Instructions]]","displayText":"","beforeContext":"Reads and executes ","afterContext":"."},{"line":3,"link":"Program Memory","original":"[[Program Memory]]","displayText":"","beforeContext":"The interpreter reads the ","afterContext":" and executes one by one every instruction written in."},{"line":3,"link":"Interpreter#Instructions","original":"[[Interpreter#Instructions|instruction]]","displayText":"instruction","beforeContext":"The interpreter reads the Program Memory and executes one by one every ","afterContext":" written in."},{"line":6,"link":"Interpreter#Instructions","original":"[[Interpreter#Instructions]]","displayText":"","beforeContext":"","afterContext":""},{"line":7,"link":"Interpreter#Checkpoints","original":"[[Interpreter#Checkpoints]]","displayText":"","beforeContext":"","afterContext":""},{"line":18,"link":"Checkpoints","original":"[[Checkpoints\\|checkpoint]]","displayText":"checkpoint","beforeContext":"Set a ","afterContext":" in the program."},{"line":18,"link":"Checkpoints","original":"[[Checkpoints\\|checkpoint]]","displayText":"checkpoint","beforeContext":"Go to a specific ","afterContext":"."},{"line":18,"link":"Stack","original":"[[Stack]]","displayText":"","beforeContext":"Add a value to the ","afterContext":"."},{"line":18,"link":"Stack","original":"[[Stack]]","displayText":"","beforeContext":"Remove the last value from the ","afterContext":", and stores it at the specified destination."},{"line":18,"link":"Arithmetic Logic Unit#Operations types","original":"[[Arithmetic Logic Unit#Operations types\\|Operation]]","displayText":"Operation","beforeContext":"destination, value, ","afterContext":""},{"line":18,"link":"Arithmetic Logic Unit#Instructions","original":"[[Arithmetic Logic Unit#Instructions\\|instruction]]","displayText":"instruction","beforeContext":"Sends an ","afterContext":" the Arithmetic Logic Unit."},{"line":18,"link":"Arithmetic Logic Unit","original":"[[Arithmetic Logic Unit]]","displayText":"","beforeContext":"Sends an instruction the ","afterContext":"."},{"line":30,"link":"Registers","original":"[[Registers\\|Register]]","displayText":"Register","beforeContext":"","afterContext":" ID <br/> RAM address"},{"line":30,"link":"Random Access Memory","original":"[[Random Access Memory\\|RAM]]","displayText":"RAM","beforeContext":"Register ID <br/> ","afterContext":" address"},{"line":30,"link":"Registers","original":"[[Registers\\|Register]]","displayText":"Register","beforeContext":"","afterContext":" : 0x0 <br/> RAM address : 0x1"},{"line":30,"link":"Random Access Memory","original":"[[Random Access Memory\\|RAM]]","displayText":"RAM","beforeContext":"Register : 0x0 <br/> ","afterContext":" address : 0x1"},{"line":30,"link":"Registers","original":"[[Registers\\|Register]]","displayText":"Register","beforeContext":"","afterContext":" ID <br/> RAM address <br/> Any"},{"line":30,"link":"Random Access Memory","original":"[[Random Access Memory\\|RAM]]","displayText":"RAM","beforeContext":"Register ID <br/> ","afterContext":" address <br/> Any"},{"line":30,"link":"Registers","original":"[[Registers\\|Register]]","displayText":"Register","beforeContext":"","afterContext":" : 0x0 <br/> RAM address : 0x1 <br/> Any : 0x2"},{"line":30,"link":"Random Access Memory","original":"[[Random Access Memory\\|RAM]]","displayText":"RAM","beforeContext":"Register : 0x0 <br/> ","afterContext":" address : 0x1 <br/> Any : 0x2"},{"line":38,"link":"Interpreter","original":"[[Interpreter]]","displayText":"","beforeContext":"Used by the ","afterContext":" to navigate back through programs."},{"line":40,"link":"Interpreter#Instructions","original":"[[Interpreter#Instructions|Instruction]]","displayText":"Instruction","beforeContext":"When an ","afterContext":" 0x2 is executed by the Interpreter, 4 of the 0xff Random Access Memory allocated bytes is set to the previous program cursor location. These bytes are set back to 0 when the Instruction 0x3 is executed."},{"line":40,"link":"Interpreter","original":"[[Interpreter]]","displayText":"","beforeContext":"When an Instruction 0x2 is executed by the ","afterContext":", 4 of the 0xff Random Access Memory allocated bytes is set to the previous program cursor location. These bytes are set back to 0 when the Instruction 0x3 is executed."},{"line":40,"link":"Random Access Memory","original":"[[Random Access Memory]]","displayText":"","beforeContext":"When an Instruction 0x2 is executed by the Interpreter, 4 of the 0xff ","afterContext":" allocated bytes is set to the previous program cursor location. These bytes are set back to 0 when the Instruction 0x3 is executed."},{"line":40,"link":"Interpreter#Instructions","original":"[[Interpreter#Instructions|Instruction]]","displayText":"Instruction","beforeContext":"When an Instruction 0x2 is executed by the Interpreter, 4 of the 0xff Random Access Memory allocated bytes is set to the previous program cursor location. These bytes are set back to 0 when the ","afterContext":" 0x3 is executed."}],"embeds":[],"tags":[],"headings":[{"line":0,"heading":"Interpreter","level":1},{"line":5,"heading":"Summary","level":2},{"line":9,"heading":"Instructions","level":2},{"line":14,"heading":"Instructions definitions","level":3},{"line":26,"heading":"Operands definitions","level":3},{"line":37,"heading":"Checkpoints","level":1}]},"f319087b42ea856561ffe8314a60fbf7628cd6d8a48adabaa1aae8a0bd5d721f":{"links":[{"line":2,"link":"Arithmetic Logic Unit","original":"[[Arithmetic Logic Unit]]","displayText":"","beforeContext":" ","afterContext":""},{"line":3,"link":"Interpreter","original":"[[Interpreter]]","displayText":"","beforeContext":" ","afterContext":""},{"line":4,"link":"Registers","original":"[[Registers]]","displayText":"","beforeContext":" ","afterContext":""},{"line":5,"link":"Stack","original":"[[Stack]]","displayText":"","beforeContext":" ","afterContext":""}],"embeds":[],"tags":[],"headings":[{"line":0,"heading":"CPU","level":1}]},"65afdb5c28dd10d0b18fff5dfcff321c7074c0940386396f1f75a27222c9abf8":{"links":[{"line":1,"link":"Emulator","original":"[[Emulator]]","displayText":"","beforeContext":"The Ranom Access Memory (RAM) is where the ","afterContext":" stores data. The RAM provides 65535 bits of storage."},{"line":3,"link":"Central Processing Unit","original":"[[Central Processing Unit|CPU]]","displayText":"CPU","beforeContext":"RAM can be accessed at any time by the ","afterContext":"’s Interpreter. To modify RAM, please use the Interpreter#Instructions 0x04."},{"line":3,"link":"Interpreter","original":"[[Interpreter]]","displayText":"","beforeContext":"RAM can be accessed at any time by the CPU’s ","afterContext":". To modify RAM, please use the Interpreter#Instructions 0x04."},{"line":3,"link":"Interpreter#Instructions","original":"[[Interpreter#Instructions]]","displayText":"","beforeContext":"RAM can be accessed at any time by the CPU’s Interpreter. To modify RAM, please use the ","afterContext":" 0x04."},{"line":8,"link":"Interpreter#Checkpoints","original":"[[Interpreter#Checkpoints]]","displayText":"","beforeContext":"Used to store cursor positions (","afterContext":")."}],"embeds":[],"tags":[],"headings":[{"line":0,"heading":"Random Access Memory","level":1},{"line":5,"heading":"Allocated RAM","level":2}]},"593f58f83f19b9a8987cde7bb3afd7bf55e97d8ad0a65debecb153d02a97a28c":{"links":[{"line":1,"link":"Central Processing Unit","original":"[[Central Processing Unit|CPU]]","displayText":"CPU","beforeContext":"The goal is to create a simplistic PC using C++.Once done, the new goal will be to create my own assembler for this emulator’s ","afterContext":"."},{"line":6,"link":"Core","original":"[[Core]]","displayText":"","beforeContext":" ","afterContext":""},{"line":7,"link":"Central Processing Unit","original":"[[Central Processing Unit]]","displayText":"","beforeContext":" ","afterContext":""},{"line":8,"link":"Program Memory","original":"[[Program Memory]]","displayText":"","beforeContext":" ","afterContext":""},{"line":9,"link":"Random Access Memory","original":"[[Random Access Memory]]","displayText":"","beforeContext":" ","afterContext":""}],"embeds":[],"tags":[],"headings":[{"line":0,"heading":"Emulator","level":1}]},"b30920e7e2d6affad0c12e31cb667b8ca13b075057fae6a8900c0d91479e20b8":{"links":[],"embeds":[],"tags":[],"headings":[{"line":0,"heading":"Emulator","level":1}]}},"algorithmVersion":9}